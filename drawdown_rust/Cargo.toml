[package]
name = "drawdown_rust"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
flutter_rust_bridge = "1.54.1"
rand = "0.8.5"
rayon = "1.6.0"
serde = { version = "1.0.147", features = ["derive"] }
serde_json = { version = "1.0.87", features = ["preserve_order", "float_roundtrip"] }

# Don't need this if following convention of file bin/main.rs
#[[bin]]
#name = "montecarlo"
#path = "bin/main.rs"

[lib]
# https://doc.rust-lang.org/cargo/reference/cargo-targets.html#the-crate-type-field
# I couldn't import montecarlo in main.rs because I was missing "lib" 
# It wasn't compiling a library that Rust itself could reference. 
# Source code reference isn't enough. Seems like rustc compiles the library
# and then references *the library*, not the source, from main.rs.
crate-type = ["lib", "staticlib", "cdylib"]
name = "montecarlo"